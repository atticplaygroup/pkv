// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: kvstore/v1/kvstore.proto

package kvstore

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	KvStoreService_CreateValue_FullMethodName       = "/kvstore.v1.KvStoreService/CreateValue"
	KvStoreService_CreateStreamValue_FullMethodName = "/kvstore.v1.KvStoreService/CreateStreamValue"
	KvStoreService_GetValue_FullMethodName          = "/kvstore.v1.KvStoreService/GetValue"
	KvStoreService_GetStreamValue_FullMethodName    = "/kvstore.v1.KvStoreService/GetStreamValue"
	KvStoreService_ListStreamValues_FullMethodName  = "/kvstore.v1.KvStoreService/ListStreamValues"
	KvStoreService_ProlongValue_FullMethodName      = "/kvstore.v1.KvStoreService/ProlongValue"
	KvStoreService_SearchCid_FullMethodName         = "/kvstore.v1.KvStoreService/SearchCid"
	KvStoreService_SearchInstance_FullMethodName    = "/kvstore.v1.KvStoreService/SearchInstance"
	KvStoreService_CreateSession_FullMethodName     = "/kvstore.v1.KvStoreService/CreateSession"
	KvStoreService_RegisterInstance_FullMethodName  = "/kvstore.v1.KvStoreService/RegisterInstance"
	KvStoreService_Ping_FullMethodName              = "/kvstore.v1.KvStoreService/Ping"
	KvStoreService_DelegatedRouting_FullMethodName  = "/kvstore.v1.KvStoreService/DelegatedRouting"
)

// KvStoreServiceClient is the client API for KvStoreService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type KvStoreServiceClient interface {
	CreateValue(ctx context.Context, in *CreateValueRequest, opts ...grpc.CallOption) (*CreateValueResponse, error)
	CreateStreamValue(ctx context.Context, in *CreateStreamValueRequest, opts ...grpc.CallOption) (*CreateStreamValueResponse, error)
	GetValue(ctx context.Context, in *GetValueRequest, opts ...grpc.CallOption) (*GetValueResponse, error)
	GetStreamValue(ctx context.Context, in *GetStreamValueRequest, opts ...grpc.CallOption) (*GetStreamValueResponse, error)
	ListStreamValues(ctx context.Context, in *ListStreamValuesRequest, opts ...grpc.CallOption) (*ListStreamValuesResponse, error)
	ProlongValue(ctx context.Context, in *ProlongValueRequest, opts ...grpc.CallOption) (*ProlongValueResponse, error)
	SearchCid(ctx context.Context, in *SearchCidRequest, opts ...grpc.CallOption) (*SearchCidResponse, error)
	SearchInstance(ctx context.Context, in *SearchInstanceRequest, opts ...grpc.CallOption) (*SearchInstanceResponse, error)
	CreateSession(ctx context.Context, in *CreateSessionRequest, opts ...grpc.CallOption) (*CreateSessionResponse, error)
	RegisterInstance(ctx context.Context, in *RegisterInstanceRequest, opts ...grpc.CallOption) (*RegisterInstanceResponse, error)
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	DelegatedRouting(ctx context.Context, in *DelegatedRoutingRequest, opts ...grpc.CallOption) (*DelegatedRoutingResponse, error)
}

type kvStoreServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewKvStoreServiceClient(cc grpc.ClientConnInterface) KvStoreServiceClient {
	return &kvStoreServiceClient{cc}
}

func (c *kvStoreServiceClient) CreateValue(ctx context.Context, in *CreateValueRequest, opts ...grpc.CallOption) (*CreateValueResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateValueResponse)
	err := c.cc.Invoke(ctx, KvStoreService_CreateValue_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvStoreServiceClient) CreateStreamValue(ctx context.Context, in *CreateStreamValueRequest, opts ...grpc.CallOption) (*CreateStreamValueResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateStreamValueResponse)
	err := c.cc.Invoke(ctx, KvStoreService_CreateStreamValue_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvStoreServiceClient) GetValue(ctx context.Context, in *GetValueRequest, opts ...grpc.CallOption) (*GetValueResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetValueResponse)
	err := c.cc.Invoke(ctx, KvStoreService_GetValue_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvStoreServiceClient) GetStreamValue(ctx context.Context, in *GetStreamValueRequest, opts ...grpc.CallOption) (*GetStreamValueResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetStreamValueResponse)
	err := c.cc.Invoke(ctx, KvStoreService_GetStreamValue_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvStoreServiceClient) ListStreamValues(ctx context.Context, in *ListStreamValuesRequest, opts ...grpc.CallOption) (*ListStreamValuesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListStreamValuesResponse)
	err := c.cc.Invoke(ctx, KvStoreService_ListStreamValues_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvStoreServiceClient) ProlongValue(ctx context.Context, in *ProlongValueRequest, opts ...grpc.CallOption) (*ProlongValueResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ProlongValueResponse)
	err := c.cc.Invoke(ctx, KvStoreService_ProlongValue_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvStoreServiceClient) SearchCid(ctx context.Context, in *SearchCidRequest, opts ...grpc.CallOption) (*SearchCidResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SearchCidResponse)
	err := c.cc.Invoke(ctx, KvStoreService_SearchCid_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvStoreServiceClient) SearchInstance(ctx context.Context, in *SearchInstanceRequest, opts ...grpc.CallOption) (*SearchInstanceResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SearchInstanceResponse)
	err := c.cc.Invoke(ctx, KvStoreService_SearchInstance_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvStoreServiceClient) CreateSession(ctx context.Context, in *CreateSessionRequest, opts ...grpc.CallOption) (*CreateSessionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateSessionResponse)
	err := c.cc.Invoke(ctx, KvStoreService_CreateSession_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvStoreServiceClient) RegisterInstance(ctx context.Context, in *RegisterInstanceRequest, opts ...grpc.CallOption) (*RegisterInstanceResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RegisterInstanceResponse)
	err := c.cc.Invoke(ctx, KvStoreService_RegisterInstance_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvStoreServiceClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, KvStoreService_Ping_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvStoreServiceClient) DelegatedRouting(ctx context.Context, in *DelegatedRoutingRequest, opts ...grpc.CallOption) (*DelegatedRoutingResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DelegatedRoutingResponse)
	err := c.cc.Invoke(ctx, KvStoreService_DelegatedRouting_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KvStoreServiceServer is the server API for KvStoreService service.
// All implementations must embed UnimplementedKvStoreServiceServer
// for forward compatibility.
type KvStoreServiceServer interface {
	CreateValue(context.Context, *CreateValueRequest) (*CreateValueResponse, error)
	CreateStreamValue(context.Context, *CreateStreamValueRequest) (*CreateStreamValueResponse, error)
	GetValue(context.Context, *GetValueRequest) (*GetValueResponse, error)
	GetStreamValue(context.Context, *GetStreamValueRequest) (*GetStreamValueResponse, error)
	ListStreamValues(context.Context, *ListStreamValuesRequest) (*ListStreamValuesResponse, error)
	ProlongValue(context.Context, *ProlongValueRequest) (*ProlongValueResponse, error)
	SearchCid(context.Context, *SearchCidRequest) (*SearchCidResponse, error)
	SearchInstance(context.Context, *SearchInstanceRequest) (*SearchInstanceResponse, error)
	CreateSession(context.Context, *CreateSessionRequest) (*CreateSessionResponse, error)
	RegisterInstance(context.Context, *RegisterInstanceRequest) (*RegisterInstanceResponse, error)
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	DelegatedRouting(context.Context, *DelegatedRoutingRequest) (*DelegatedRoutingResponse, error)
	mustEmbedUnimplementedKvStoreServiceServer()
}

// UnimplementedKvStoreServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedKvStoreServiceServer struct{}

func (UnimplementedKvStoreServiceServer) CreateValue(context.Context, *CreateValueRequest) (*CreateValueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateValue not implemented")
}
func (UnimplementedKvStoreServiceServer) CreateStreamValue(context.Context, *CreateStreamValueRequest) (*CreateStreamValueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStreamValue not implemented")
}
func (UnimplementedKvStoreServiceServer) GetValue(context.Context, *GetValueRequest) (*GetValueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValue not implemented")
}
func (UnimplementedKvStoreServiceServer) GetStreamValue(context.Context, *GetStreamValueRequest) (*GetStreamValueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStreamValue not implemented")
}
func (UnimplementedKvStoreServiceServer) ListStreamValues(context.Context, *ListStreamValuesRequest) (*ListStreamValuesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStreamValues not implemented")
}
func (UnimplementedKvStoreServiceServer) ProlongValue(context.Context, *ProlongValueRequest) (*ProlongValueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProlongValue not implemented")
}
func (UnimplementedKvStoreServiceServer) SearchCid(context.Context, *SearchCidRequest) (*SearchCidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchCid not implemented")
}
func (UnimplementedKvStoreServiceServer) SearchInstance(context.Context, *SearchInstanceRequest) (*SearchInstanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchInstance not implemented")
}
func (UnimplementedKvStoreServiceServer) CreateSession(context.Context, *CreateSessionRequest) (*CreateSessionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSession not implemented")
}
func (UnimplementedKvStoreServiceServer) RegisterInstance(context.Context, *RegisterInstanceRequest) (*RegisterInstanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterInstance not implemented")
}
func (UnimplementedKvStoreServiceServer) Ping(context.Context, *PingRequest) (*PingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (UnimplementedKvStoreServiceServer) DelegatedRouting(context.Context, *DelegatedRoutingRequest) (*DelegatedRoutingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelegatedRouting not implemented")
}
func (UnimplementedKvStoreServiceServer) mustEmbedUnimplementedKvStoreServiceServer() {}
func (UnimplementedKvStoreServiceServer) testEmbeddedByValue()                        {}

// UnsafeKvStoreServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to KvStoreServiceServer will
// result in compilation errors.
type UnsafeKvStoreServiceServer interface {
	mustEmbedUnimplementedKvStoreServiceServer()
}

func RegisterKvStoreServiceServer(s grpc.ServiceRegistrar, srv KvStoreServiceServer) {
	// If the following call pancis, it indicates UnimplementedKvStoreServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&KvStoreService_ServiceDesc, srv)
}

func _KvStoreService_CreateValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvStoreServiceServer).CreateValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KvStoreService_CreateValue_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvStoreServiceServer).CreateValue(ctx, req.(*CreateValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KvStoreService_CreateStreamValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStreamValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvStoreServiceServer).CreateStreamValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KvStoreService_CreateStreamValue_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvStoreServiceServer).CreateStreamValue(ctx, req.(*CreateStreamValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KvStoreService_GetValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvStoreServiceServer).GetValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KvStoreService_GetValue_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvStoreServiceServer).GetValue(ctx, req.(*GetValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KvStoreService_GetStreamValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStreamValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvStoreServiceServer).GetStreamValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KvStoreService_GetStreamValue_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvStoreServiceServer).GetStreamValue(ctx, req.(*GetStreamValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KvStoreService_ListStreamValues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStreamValuesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvStoreServiceServer).ListStreamValues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KvStoreService_ListStreamValues_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvStoreServiceServer).ListStreamValues(ctx, req.(*ListStreamValuesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KvStoreService_ProlongValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProlongValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvStoreServiceServer).ProlongValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KvStoreService_ProlongValue_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvStoreServiceServer).ProlongValue(ctx, req.(*ProlongValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KvStoreService_SearchCid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchCidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvStoreServiceServer).SearchCid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KvStoreService_SearchCid_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvStoreServiceServer).SearchCid(ctx, req.(*SearchCidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KvStoreService_SearchInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvStoreServiceServer).SearchInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KvStoreService_SearchInstance_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvStoreServiceServer).SearchInstance(ctx, req.(*SearchInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KvStoreService_CreateSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvStoreServiceServer).CreateSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KvStoreService_CreateSession_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvStoreServiceServer).CreateSession(ctx, req.(*CreateSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KvStoreService_RegisterInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvStoreServiceServer).RegisterInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KvStoreService_RegisterInstance_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvStoreServiceServer).RegisterInstance(ctx, req.(*RegisterInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KvStoreService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvStoreServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KvStoreService_Ping_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvStoreServiceServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KvStoreService_DelegatedRouting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelegatedRoutingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvStoreServiceServer).DelegatedRouting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KvStoreService_DelegatedRouting_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvStoreServiceServer).DelegatedRouting(ctx, req.(*DelegatedRoutingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// KvStoreService_ServiceDesc is the grpc.ServiceDesc for KvStoreService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var KvStoreService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "kvstore.v1.KvStoreService",
	HandlerType: (*KvStoreServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateValue",
			Handler:    _KvStoreService_CreateValue_Handler,
		},
		{
			MethodName: "CreateStreamValue",
			Handler:    _KvStoreService_CreateStreamValue_Handler,
		},
		{
			MethodName: "GetValue",
			Handler:    _KvStoreService_GetValue_Handler,
		},
		{
			MethodName: "GetStreamValue",
			Handler:    _KvStoreService_GetStreamValue_Handler,
		},
		{
			MethodName: "ListStreamValues",
			Handler:    _KvStoreService_ListStreamValues_Handler,
		},
		{
			MethodName: "ProlongValue",
			Handler:    _KvStoreService_ProlongValue_Handler,
		},
		{
			MethodName: "SearchCid",
			Handler:    _KvStoreService_SearchCid_Handler,
		},
		{
			MethodName: "SearchInstance",
			Handler:    _KvStoreService_SearchInstance_Handler,
		},
		{
			MethodName: "CreateSession",
			Handler:    _KvStoreService_CreateSession_Handler,
		},
		{
			MethodName: "RegisterInstance",
			Handler:    _KvStoreService_RegisterInstance_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _KvStoreService_Ping_Handler,
		},
		{
			MethodName: "DelegatedRouting",
			Handler:    _KvStoreService_DelegatedRouting_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kvstore/v1/kvstore.proto",
}
