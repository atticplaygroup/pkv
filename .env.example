#################################################
# Pkv main service configurations
#################################################
REDIS_HOST=redis
REDIS_PORT=6379
GRPC_PORT=50051
GATEWAY_PORT=3000

# In pkv 2 access tokens are required:
#     1. auth token: Used for access control.
#     2. quota token: Used to monitor bandwidth and storage usage.
# JWT_SECRET is used to generate auth token, which is a standard session token after login via Oauth
# Currently it uses HS256 for this purpose because it does not need to communicate with other parties with this token.
JWT_SECRET=fSWIg9naIcjkI1jb6E6cnOCirhqj+NLfzg+3VDmgDmg=

# QUOTA_AUTHORITY_PUBLIC_KEY is the public key of the Prex instance you trust and can withdraw earnings for pkv service.
# Currently only 1 is supported but in the future one may add support for more.
# It uses EdDSA JWT signing scheme. Public key is a must here because
# a Prex instance must issue tokens for other parties to verify.
#
# When testing you may first generate a signing seed via
# `cat /dev/urandom | head -c 32 | base64`
# then call `go run cmd/mock_prex/mock_prex.go` which will print out the pubkey
QUOTA_AUTHORITY_PUBLIC_KEY=Qt5xqHJJrMqI/JpY9RwCSyqASVdp9kh75c7R2bYAvVw=

#################################################
# Jwt Issuer (genjwt) service configurations
#################################################
# `genjwt` is a standard OAuth 2.0 client 
CLIENT_ID=1111
CLIENT_SECRET=2222
REDIRECT_URL=http://localhost:8080/v1/callback
SERVICE_PORT=8080
IS_TEST=true

#################################################
# Mock Prex configurations
#################################################
# This seed should match QUOTA_AUTHORITY_PUBLIC_KEY
SIGNING_SEED=HbFdKCKTGkzcWKMPWmHKjW/Ii/wpcKTyD+8QIxw3Gc0=
